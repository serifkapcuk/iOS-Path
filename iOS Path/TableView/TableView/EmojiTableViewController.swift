//
//  EmojiTableViewController.swift
//  TableView
//
//  Created by Åžerif Botan Kapcuk on 26.06.2025.
// Rowlar arasÄ±ndaki aralÄ±gÄ± arttÄ±rmak iÃ§in, table view'i seÃ§eriz ve row heihghti automatic yerine manual istediÄŸimiz sayÄ±yÄ± veririz


import UIKit

class EmojiTableViewController: UITableViewController {
   
    var emojiler: [Emoji] = [
        Emoji(symbol: "ðŸ˜‚", name: "Grining Face", descripton: "A typically smiley face", usage: "happiness"),
        Emoji(symbol: "ðŸ˜‚", name: "Grining Face", descripton: "A typically smiley face", usage: "happiness"),
        Emoji(symbol: "ðŸ˜‚", name: "Grining Face", descripton: "A typically smiley face", usage: "happiness"),
        Emoji(symbol: "ðŸ˜‚", name: "Grining Face", descripton: "A typically smiley face", usage: "happiness"),
        Emoji(symbol: "ðŸ˜‚", name: "Grining Face", descripton: "A typically smiley face", usage: "happiness"),
        Emoji(symbol: "ðŸ˜‚", name: "Grining Face", descripton: "A typically smiley face", usage: "happiness"),
        Emoji(symbol: "ðŸ˜‚", name: "Grining Face", descripton: "A typically smiley face", usage: "happiness"),
        Emoji(symbol: "ðŸ˜‚", name: "Grining Face", descripton: "A typically smiley face", usage: "happiness"),
        Emoji(symbol: "ðŸ˜‚", name: "Grining Face", descripton: "A typically smiley face", usage: "happiness"),

    ]
    
    
    override func viewDidLoad() {
        super.viewDidLoad()
    }
    
    
    override func numberOfSections(in tableView: UITableView) -> Int {
        return 1
        //1 sectionunuz var ise bu fonksiyonu yazmanÄ±za gerek yok varsayÄ±lan 1 zaten
    }
    
    override func tableView(_ tableView: UITableView, numberOfRowsInSection section: Int) -> Int {
        return emojiler.count
        //Bu fonksiyon 1 kere calÄ±sÄ±p bitmiyor, 4 sectiona sahip 1 yapÄ± var ise, 4 section teker teker calÄ±sÄ±tÄ±gÄ±nda her section calÄ±sÄ±rken gelecek
    }
    override func tableView(_ tableView: UITableView, cellForRowAt indexPath: IndexPath) -> UITableViewCell {
        // Bir hÃ¼cre ne zaman ekrana gelecekse cellForRowAt ile Ã§izilir.
        // Bu fonksiyonun kaÃ§ kere calÄ±sacagÄ± belli deÄŸildir, KullanÄ±cÄ± scroll ettiÄŸi kadar calÄ±sÄ±r veya dizi elemanÄ± kadar calÄ±sÄ±r.
        //HÃ¼crenin sÄ±ralamasÄ±nÄ± vermek
        let emoji=emojiler[indexPath.row]
        
        // Storyboarddaki tanÄ±mlanan cell ile tanÄ±mak
    
        let cell = tableView.dequeueReusableCell(withIdentifier:"EmojiCell") as! EmojiTableViewCell
        
        cell.update(with: emoji)
        //olusturulan hucreyÄ± return etmek
        return cell
        
    }
    
    override func tableView(_ tableView: UITableView, editingStyleForRowAt indexPath: IndexPath) -> UITableViewCell.EditingStyle {
        return .delete
    }
    
    
    override func prepare(for segue: UIStoryboardSegue, sender: Any?) {
        if segue.identifier == "viewControllerSegue"{
            // O an seÃ§ili olan hucrenÄ±n IndexPath 	deÄŸerini verir
            	let selectedIndexPath = tableView.indexPathForSelectedRow!
            
            // O an seÃ§ili olan rowdaki emojilerin nesnesine ulasÄ±r
            
            let selectedEmoji = emojiler[selectedIndexPath.row]
            // seguenin storyboardda baÄŸlÄ± olan navigaionController
            
            let navigationController = segue.destination as! UINavigationController
            
            // Navigation controllera baglanan top sayfaya ulasÄ±r
            
            let editEmojiController = navigationController.topViewController as! NewEmojiTableViewController
            
            editEmojiController.emoji=selectedEmoji
            
            
            
        }
    }
    override func tableView(_ tableView :UITableView, commit editingStyle:UITableViewCell.EditingStyle, forRowAt indexPath:IndexPath){
        // Ä°ndex Path : Editing hÃ¼crenin gerÃ§ekleÅŸtiÄŸi hÃ¼crenin konumu, editingstyle : delete veya add yani yapÄ±lacak aksiyon
        if editingStyle == .delete{
            // AdÄ±m 1 : Emojis arryinden indexPath.row'da bulunan objeyi sil
            emojiler.remove(at: indexPath.row)
        }
        // tableview'e sil dememiz gerekiyor
        tableView.deleteRows(at: [indexPath], with: .automatic)
        
    }
    // SeÃ§ilen cell, kaydÄ±rÄ±larak yer deÄŸiÅŸtirir
    override func tableView(_ tableView:UITableView, didSelectRowAt indexPath:IndexPath){
        let selectedEmoji = emojiler[indexPath.row]
        performSegue(withIdentifier:"viewControllerSegue", sender: nil)
        print("\(selectedEmoji.symbol) \(indexPath)")
    }
    
    
    @IBAction func editButtonTapped(_ button: UIBarButtonItem){
        let tableViewEdittingMode = tableView.isEditing
        tableView.setEditing(!tableViewEdittingMode, animated: true)
    }
    
    // Mak -- Delegate fonksiyonlarÄ± zorunlu deÄŸildir,  row Ã¼zerindeki actionlarÄ± delegate Ã¼zerinde yaparÄ±z
    
    // Mark -- Action ( Burada butonlar ekleyip rowlar Ã¼zerinde iÅŸlemler yaptÄ±rabiliriz).
    
    
    // New emoji sayfasÄ±ndan EmojiTableViewController ekranÄ±na geÃ§mek iÃ§in kullanÄ±lan function
    
    
    
    
    
    @IBAction func unwindFromNewEmoji (_ segue:UIStoryboardSegue){
        guard segue.identifier=="saveUnwind",
              let sourceViewController = segue.source as? NewEmojiTableViewController,
              let newEmoji = sourceViewController.emoji     else {return}
        
        if let selectedIndexPath = tableView.indexPathForSelectedRow{
            // Daha Ã¶nceden bir hÃ¼cre seÃ§ilmiÅŸ
            emojiler[selectedIndexPath.row] = newEmoji
            
            
            tableView.reloadRows(at: [selectedIndexPath], with: .automatic)
        }
        else {
            // Yeni bir emoji eklenmiÅŸ
       
        
        // AdÄ±m 1 , yeni emoji objesini "emojiler" arrayÄ±ne ekle
        emojiler.append(newEmoji)
        
        // Yeni bir hÃ¼cre iÃ§in indexPath oluÅŸtur
        let newIndexPath = IndexPath(row: emojiler.count, section: 0)
        
        //OluÅŸturulan indexPath iÃ§in TableView'a yeni bir hÃ¼cre eklenir
        tableView.insertRows(at: [newIndexPath], with: .automatic)
        
        }
        
        
    }
    
}
